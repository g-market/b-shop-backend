plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.diffplug.gradle.spotless" version "4.5.1" // spotless
}

group = 'com.gabia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    runtimeOnly 'com.mysql:mysql-connector-j:8.0.31'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // test Containers
    testImplementation "org.testcontainers:junit-jupiter:1.17.6"
    testImplementation "org.testcontainers:mysql:1.17.6"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

tasks.named('test') {
    useJUnitPlatform()
}

// =============== spotless ===========
spotless {
    java {
        // 사용하지 않는 import 제거
        removeUnusedImports()
        // 공백 제거
        trimTrailingWhitespace()
        // Tab으로 처리(파라미터에 숫자를 넣으면 )
        indentWithTabs(2)
        indentWithSpaces(4)

        // 끝부분 NewLine 처리
        endWithNewline()

        /**
         * import 순서도 정의가 가능하다.
         */
        importOrder 'java', 'javax', 'org', 'com', 'com.diffplug', ''

        /**
         * Google Java Format을 쉽게 적용할 수 있다.
         */
        googleJavaFormat().aosp()
    }

    /**
     * 특정 파일에 대해 적용할 수 있다.
     */
    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'

        trimTrailingWhitespace()
        indentWithTabs()
        endWithNewline()
    }
}
